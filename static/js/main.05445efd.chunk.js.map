{"version":3,"sources":["theme.js","rdx/initialArg.js","rdx/handle.js","rdx/reducer.js","rdx/action.js","comps/confirmaPedido/css.js","comps/confirmaPedido/index.js","comps/cardapioItem/index.js","comps/caradapio/index.js","comps/pedidoItem/index.js","comps/pedido/index.js","App.js","serviceWorker.js","index.js"],"names":["hood","brown","wall","pink","theme","createMuiTheme","palette","common","primary","main","secondary","initialArg","menu","itens","codigo","nome","preco","versao","pedido","quantidade","aberto","handle","pedidoMenosUm","state","action","itemPedido","find","el","map","filter","pedidoMaisUm","concat","setComandaAberto","reducer","type","useStyle","makeStyles","fab","position","right","bottom","ConfirmaPedido","dispatch","classes","css","Fab","onClick","color","aria-label","className","MenuItem","handleMaisUm","handleMenosUm","ListItem","Grid","container","item","xs","Button","Cardapio","makeMenosUm","List","key","PedidoItem","TableRow","TableCell","Pedido","componentRef","useRef","fechaDialog","Dialog","open","onClose","scroll","DialogTitle","DialogContent","ref","TableContainer","Table","TableHead","TableBody","i","DialogActions","trigger","content","current","App","useReducer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.05445efd.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\nimport brown from '@material-ui/core/colors/brown'\nimport pink from '@material-ui/core/colors/pink'\n\nconst hood = brown['500']\nconst wall = pink['200']\n\nconst theme = createMuiTheme({\n  palette: {\n    common: {\n      hood,\n      wall\n    },\n    primary: {\n      main: hood\n    },\n    secondary: {\n      main: wall\n    }\n  }\n})\n\nexport default theme","const initialArg = {\n  menu: {\n    itens: [\n      {\n        codigo: 'cer01',\n        nome: 'Cerveja Itaipava',\n        preco: 3\n      },\n      {\n        codigo: 'bol01',\n        nome: 'Bolinho de Peixe',\n        preco: 5\n      },\n      {\n        codigo: 'pei01',\n        nome: 'Peixe Frito',\n        preco: 7\n      },\n    ],\n    versao: '01'\n  },\n  pedido: {\n    itens: [\n      {\n        codigo: 'cer01',\n        quantidade: 3\n      },\n      {\n        codigo: 'bol01',\n        quantidade: 2\n      },\n    ],\n    aberto: false\n  }\n}\n\nexport default initialArg","const pedidoMaisUm = (state, action) => {\n  const itemPedido = state.pedido.itens.find(el => el.codigo === action.codigo)\n  if (itemPedido) {\n    return {\n      ...state,\n      pedido: {\n        ...state.pedido,\n        itens: state.pedido.itens.map(el => el.codigo !== action.codigo ? el : { ...el, quantidade: el.quantidade + 1 })\n      }\n    }\n  } else {\n    return {\n      ...state,\n      pedido: {\n        ...state.pedido,\n        itens: state.pedido.itens.concat({ codigo: action.codigo, quantidade: 1 })\n      }\n    }\n  }\n}\n\nconst pedidoMenosUm = (state, action) => {\n  const itemPedido = state.pedido.itens.find(el => el.codigo === action.codigo)\n  const quantidade = itemPedido ? itemPedido.quantidade : 0\n  if (quantidade > 1) {\n    return {\n      ...state,\n      pedido: {\n        ...state.pedido,\n        itens: state.pedido.itens.map(el => el.codigo !== action.codigo ? el: { ...el, quantidade: el.quantidade - 1 })\n      }\n    }\n  } else if(quantidade === 1) {\n    return {\n      ...state,\n      pedido: {\n        ...state.pedido,\n        itens: state.pedido.itens.filter(el => el.codigo !== action.codigo)\n      }\n    }\n  } else {\n    return state\n  }\n}\n\nconst setComandaAberto = (state, action) => {\n  return {\n    ...state,\n    pedido: {\n      ...state.pedido,\n      aberto: action.aberto\n    }\n  }\n}\n\nconst handle = {\n  pedidoMenosUm,\n  pedidoMaisUm,\n  setComandaAberto\n}\n\nexport default handle","import handle from './handle'\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'pedidoMaisUm':\n      return handle.pedidoMaisUm(state, action)\n    case 'pedidoMenosUm':\n      return handle.pedidoMenosUm(state, action)\n    case 'setComandaAberto':\n      return handle.setComandaAberto(state, action)\n    default:\n      return state\n  }\n}\n\nexport default reducer","const action = {\n  pedidoMaisUm: ({ codigo }) => ({ type: 'pedidoMaisUm', codigo }),\n  pedidoMenosUm: ({ codigo }) => ({ type: 'pedidoMenosUm', codigo }),\n  setComandaAberto: ({ aberto }) => ({ type: 'setComandaAberto', aberto })\n}\n\nexport default action","import { makeStyles } from '@material-ui/styles'\n\nconst useStyle = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    right: '1rem',\n    bottom: '1rem',\n  }\n}))\n\nexport default useStyle","import React from 'react'\n\nimport Fab from '@material-ui/core/Fab'\nimport DoneAllIcon from '@material-ui/icons/DoneAll'\nimport css from './css'\n\nconst ConfirmaPedido = ({ dispatch, action }) => {\n  const classes = css()\n\n  return <Fab\n    onClick={() => dispatch(action.setComandaAberto({ aberto: true }))}\n    color=\"primary\"\n    aria-label=\"confirm print\"\n    className={classes.fab}\n  >\n    <DoneAllIcon />\n  </Fab>\n}\n\nexport default ConfirmaPedido","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport ListItem from '@material-ui/core/ListItem'\nimport Button from '@material-ui/core/Button'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline'\n\nconst MenuItem = ({ nome, quantidade, handleMaisUm, handleMenosUm }) => {\n\n  return <ListItem >\n  <Grid container >\n    <Grid item xs={3}>\n      <p>{nome}</p>\n    </Grid>\n    <Grid item xs={3}>\n      <Button onClick={handleMaisUm}><AddCircleOutlineIcon /></Button>\n    </Grid>\n    <Grid item xs={3}>\n      <p>{quantidade}</p>\n    </Grid>\n    <Grid item xs={3}>\n      <Button onClick={handleMenosUm}><RemoveCircleOutlineIcon /></Button>\n    </Grid>\n  </Grid>\n</ListItem>\n}\n\nexport default MenuItem","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\n\nimport CardapioItem from '../cardapioItem'\n\nconst Cardapio = ({ state, dispatch, action }) => {\n  const makeMaisUm = codigo => () => {\n    dispatch(action.pedidoMaisUm({ codigo }))\n  }\n  const makeMenosUm = codigo => () => {\n    dispatch(action.pedidoMenosUm({ codigo }))\n  }\n  const quantidade = codigo => {\n    const item = state.pedido.itens.find(el => el.codigo === codigo)\n    return item ? item.quantidade : 0\n  }\n\n  return <Grid container >\n    <Grid item xs={12}>\n      <List>\n        {\n          state.menu.itens.map(el => <CardapioItem\n            key={`menulist-${el.codigo}`}\n            nome={el.nome}\n            quantidade={quantidade(el.codigo)}\n            handleMaisUm={makeMaisUm(el.codigo)}\n            handleMenosUm={makeMenosUm(el.codigo)}\n          />)\n        }\n      </List>\n    </Grid>\n  </Grid>\n}\n\nexport default Cardapio;\n","import React from 'react'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst PedidoItem = ({ codigo, quantidade }) => <TableRow>\n  <TableCell>{codigo}</TableCell>\n  <TableCell>{quantidade}</TableCell>\n</TableRow>\n\nexport default PedidoItem\n","import React, { useRef } from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\nimport PrintIcon from '@material-ui/icons/Print'\nimport CancelIcon from '@material-ui/icons/Cancel'\n\nimport ReactToPrint from 'react-to-print'\n\nimport PedidoItem from '../pedidoItem'\n\nconst Pedido = ({ state, dispatch, action}) => {\n  const componentRef = useRef()\n  const fechaDialog = () => dispatch(action.setComandaAberto({ aberto: false}))\n  const PrintButton = () => <Button color=\"primary\"><PrintIcon /></Button>\n\n  return <Dialog open={state.pedido.aberto} onClose={fechaDialog} scroll=\"body\">\n      <DialogTitle>\n        Pedido\n      </DialogTitle>\n      <DialogContent ref={componentRef}>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Código</TableCell>\n                <TableCell>Quantidade</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                state.pedido.itens.map((el, i) => <PedidoItem\n                  key={`pedido-item-${i}-${el.codigo}-${el.quantidade}`}\n                  codigo={el.codigo}\n                  quantidade={el.quantidade}\n                />)\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </DialogContent>\n      <DialogActions>\n        <ReactToPrint\n          trigger={PrintButton}\n          content={() => componentRef.current}\n        />\n        \n        <Button color=\"primary\" onClick={fechaDialog}><CancelIcon /></Button>\n      </DialogActions>\n    </Dialog>\n}\n\nexport default Pedido;\n","import React, { useReducer } from 'react'\nimport { action, initialArg, reducer } from './rdx'\n\nimport ConfirmaPedido from './comps/confirmaPedido'\nimport Cardapio from './comps/caradapio'\nimport Pedido from './comps/pedido'\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialArg)\n  return <>\n    <Pedido state={state} dispatch={dispatch} action={action}/>\n    <Cardapio state={state} dispatch={dispatch} action={action}/>\n    <ConfirmaPedido dispatch={dispatch} action={action}/>\n  </>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport theme from './theme';\n\nimport './index.css';\nimport 'typeface-roboto';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <ThemeProvider theme={ theme }>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}